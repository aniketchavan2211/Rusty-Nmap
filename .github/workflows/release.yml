name: Build & Release

on:
  push:
    tags:
      - 'v*'   # Trigger on version tags like v1.0.0

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build & Package
        run: |
          mkdir -p release
          VERSION=${GITHUB_REF_NAME#v}

          if [[ "${{ runner.os }}" == "Linux" ]]; then
            cargo build --release --target x86_64-unknown-linux-gnu
            tar -czf release/rusty-nmap-${VERSION}-linux-x86_64.tar.gz -C target/x86_64-unknown-linux-gnu/release rusty-nmap

          elif [[ "${{ runner.os }}" == "Windows" ]]; then
            cargo build --release
            powershell Compress-Archive -Path target/release/rusty-nmap.exe -DestinationPath release/rusty-nmap-${VERSION}-windows-x86_64.zip

          else
            # macOS
            cargo build --release
            tar -czf release/rusty-nmap-${VERSION}-macos-x86_64.tar.gz -C target/release rusty-nmap
          fi
        shell: bash

      - name: Generate SHA256 checksums (Linux/macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          cd release
          for f in *; do
            shasum -a 256 "$f" >> SHA256SUMS.txt
          done

      - name: Generate SHA256 checksums (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          cd release
          Get-ChildItem * | ForEach-Object {
            $hash = (Get-FileHash $_.FullName -Algorithm SHA256).Hash
            "$hash  $($_.Name)" | Out-File -Append SHA256SUMS.txt
          }

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: rusty-nmap-${{ runner.os }}
          path: release/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_artifacts

      - name: Create GitHub Release Draft
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: release_artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
